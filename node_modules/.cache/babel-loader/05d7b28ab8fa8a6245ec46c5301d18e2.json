{"ast":null,"code":"var _jsxFileName = \"/Users/diane/Desktop/MIT Coding/React/Module 13/build-a-formik-form_starter/src/App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport './index.css';\nimport { useFormik } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const formik = useFormik({\n    initialValues: {\n      emailField: '',\n      pswField: ''\n    },\n    onSubmit: values => {\n      console.log('form:', values);\n    },\n    validate: values => {\n      let errors = {};\n      let validEmailReg = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n      if (!values.emailField) errors.emailField = 'Field Required';\n      if (!values.emailField.match(validEmailReg)) errors.emailField = 'Username should be an email';\n      if (!values.pswField) errors.pswField = 'Field Required';\n      return errors;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"emailField\",\n        type: \"text\",\n        onChange: formik.handleChange,\n        value: formik.values.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), formik.errors.emailField ? /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"emailError\",\n        style: {\n          color: 'red'\n        },\n        children: formik.errors.emailField\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 37\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"pswField\",\n        type: \"text\",\n        onChange: formik.handleChange,\n        value: formik.values.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), formik.errors.pswField ? /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"pswError\",\n        style: {\n          color: 'red'\n        },\n        children: formik.errors.pswField\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 35\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n        name: \"submitBtn\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useFormik","jsxDEV","_jsxDEV","App","_s","formik","initialValues","emailField","pswField","onSubmit","values","console","log","validate","errors","validEmailReg","match","children","handleSubmit","fileName","_jsxFileName","lineNumber","columnNumber","name","type","onChange","handleChange","value","email","id","style","color","password","_c","$RefreshReg$"],"sources":["/Users/diane/Desktop/MIT Coding/React/Module 13/build-a-formik-form_starter/src/App.js"],"sourcesContent":["import React from \"react\";\nimport './index.css';\nimport {useFormik} from 'formik'\n\nfunction App() {\n  const formik = useFormik({\n    initialValues: {\n      emailField: '',\n      pswField: ''\n    },\n    onSubmit: values =>{\n      console.log('form:', values);\n    },\n    validate: values => {\n      let errors = {};\n      let validEmailReg = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n      if (!values.emailField) errors.emailField = 'Field Required';\n      if (!values.emailField.match(validEmailReg)) errors.emailField = 'Username should be an email';\n      if (!values.pswField) errors.pswField = 'Field Required';\n      return errors;\n    }\n  })\n\n  return (\n    <div>\n      <form onSubmit={formik.handleSubmit}>\n        <div>Email</div>\n        <input name=\"emailField\" type=\"text\" onChange={formik.handleChange} value={formik.values.email}/>\n        {formik.errors.emailField ? <div id='emailError' style={{color:'red'}}>{formik.errors.emailField}</div>: null}\n        <div>Password</div>\n        <input name=\"pswField\" type=\"text\" onChange={formik.handleChange} value={formik.values.password}/>\n        {formik.errors.pswField ? <div id='pswError' style={{color:'red'}}>{formik.errors.pswField}</div>: null}\n        <button name=\"submitBtn\" type=\"submit\">Submit</button>\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}